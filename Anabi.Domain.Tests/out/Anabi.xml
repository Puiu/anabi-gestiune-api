<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Anabi</name>
    </assembly>
    <members>
        <member name="M:Anabi.Features.Assets.AssetsController.Get">
            <summary>
            Returns a list of assets
            </summary>
            <response code="200">The list of assets</response>
            <param name="filter">Empty parameter</param>
            <returns>The list of assets</returns>
        </member>
        <member name="M:Anabi.Features.Assets.AssetsController.Get(System.Int32)">
            <summary>
            Returns the minimal asset for the supplied id
            </summary>
            <response code="200">The asset for the supplied id</response>
            <response code="400">The asset is not found</response>
            <response code="500">Server error</response>
            <param name="id">Must be greater than or equal to 0</param>
            <returns>Minimal asset details</returns>
        </member>
        <member name="M:Anabi.Features.Assets.AssetsController.AddMinimalAsset(Anabi.Domain.Asset.Commands.AddMinimalAsset)">
            <summary>
            Adds a new asset with minimal required details
            </summary>
            <remarks>
            <para>
            Returns the id of the newly added asset
            Validation Errors:
            NAME_NOT_EMPTY
            NAME_MAX_LENGTH_100 
            IDENTIFIER_MAX_LENGTH_100
            INVALID_CATEGORY_ID -- if CategoryId lower than or equal to zero, or the category does not exist
            INVALID_STAGE_ID -- if StageId lower than or equal to zero, or the stage id does not exist
            MEASUREUNIT_MAX_LENGTH_10 -- measure unit max 10 characters
            ESTIMATED_AMT_CURRENCY_THREE_CHARS -- currency must have 3 characters (if not empty) (USD, RON, EUR)
            </para>
            </remarks>
            <response code="201">The id of the new asset</response>
            <response code="400">In case of validation errors</response>
            <response code="500">Server error</response>
            <param name="minimalAsset">The details of the new asset to be added</param>
            <returns>The id of the new asset</returns>
        </member>
        <member name="M:Anabi.Features.Assets.AssetsController.GetStages">
            <summary>
            Gets the possible stages for an asset
            </summary>
            <response code="200">The list of stages</response>
            <response code="400"></response>
            <response code="500">Server error</response>
            <returns>The possible stages</returns>
        </member>
        <member name="M:Anabi.Features.Assets.AssetsController.GetParentCategories">
            <summary>
            Gets the parent categories
            </summary>
            <response code="200">The list of parent categories</response>
            <response code="400"></response>
            <response code="500">Server error</response>
            <returns>The parent categories</returns>
        </member>
        <member name="M:Anabi.Features.Assets.AssetsController.GetSubCategories(System.Int32)">
            <summary>
            Gets the children categories for a Parent Id
            </summary>
            <remarks>
            <para>
            Returns the children categories for a Parent Id
            Validation Errors:
            INVALID_ID
            </para>
            </remarks>
            <response code="200">The list of subcategories</response>
            <response code="400"></response>
            <response code="500">Server error</response>
            <returns>The subcategories</returns>
        </member>
        <member name="P:Anabi.Features.Assets.Models.DecisionDetails.LegalBasis">
            <summary>
            Temei juridic
            </summary>
        </member>
        <member name="P:Anabi.Features.Assets.Models.File.LegalClassification">
            <summary>
            Incadrare juridica
            </summary>
        </member>
        <member name="P:Anabi.Features.Assets.Models.File.CriminalField">
            <summary>
            Domeniu infractional
            </summary>
        </member>
        <member name="M:Anabi.Features.Assets.SolutionsController.AddSolution(System.Int32,Anabi.Domain.Asset.Commands.AddSolutionRequest)">
            <summary>
            Adds a new solution for an Asset
            </summary>
            <remarks>
            <para>
            Returns the id of the newly added solution
            Validation Errors:
            ASSET_INVALID_ID -- if lower than or equal to zero, or the id does not exist in the database
            DECISION_INVALID_ID -- if lower than or equal to zero, or the id does not exist in the database
            INSTITUTION_INVALID_ID -- if lower than or equal to zero, or the id does not exist in the database
            RECOVERYBENEFICIARY_INVALID_ID -- it is checked only if the value is not null (null value passes validation, but 0 will not)
            PRECAUTIONARYMEASURE_INVALID_ID -- it is checked only if the value is not null (null value passes validation, but 0 will not) (scop masura asiguratorie)
            STAGE_INVALID_ID -- if lower than or equal to zero, or the id does not exist in the database
            DECISION_DECISIONNUMBER_INVALID -- empty or exceeds 50 chars
            DECISION_DECISIONDATE_INVALID
            SOLUTION_FILENUMBER_INVALID -- if solution object is not null and field is empty or exceeds 200 characters
            SOLUTION_FILENUMBERPARQUET_INVALID -- if solution object is not null and field is empty or exceeds 200 characters
            SOLUTION_RECEIVINGDATE_INVALID -- if solution object is not null and field is null or default value (01.01.0001)
            RECOVERY_PERSONRESPONSIBLE_INVALID -- if recovery object is not null and field is empty or exceeds 200 characters
            RECOVERY_ESTIMATEDAMOUNT_GREATER_THAN_ZERO -- if recovery object is not null and field is 0 or less
            RECOVERY_ESTIMATEDAMOUNTCURRENCY_3_CHARS -- if recovery object is not null and field has more or less than 3 chars
            RECOVERY_ACTUALAMOUNT_GREATER_THAN_ZERO -- if recovery object is not null and field is 0 or less
            RECOVERY_ACTUALAMOUNTCURRENCY_3_CHARS -- if recovery object is not null and field has more or less than 3 chars
            RECOVERY_RECOVERYCOMMITTEEPRESIDENT_MAX_LENGTH_200 -- if recovery object is not null and recovery committee object is not null and field exceeds 200 characters
            RECOVERY_EVALUATIONCOMMITTEEPRESIDENT_MAX_LENGTH_200  -- if recovery object is not null and evaluation committee object is not null and field exceeds 200 characters
            </para>
            </remarks>
            <response code="200">The id of the new solution</response>
            <response code="400">Validation errors</response>
            <param name="assetId">Asset id to add solution for</param>
            <param name="request"></param>
            <returns>Id of the new solution</returns>
        </member>
        <member name="M:Anabi.Features.Assets.SolutionsController.GetSolutions(System.Int32)">
            <summary>
            Returns a list of solutions for a given asset id
            </summary>
            <param name="assetId">Asset id</param>
            <returns></returns>
        </member>
        <member name="M:Anabi.Features.Category.CategoriesController.Get">
            <summary>
            Returns all categories in the database
            </summary>
            <remarks>
            <para>
            Returns all categories in the database
            </para>
            </remarks>
            <response code="200">Array of categories</response>
            <response code="400">No categories found!</response>
        </member>
        <member name="M:Anabi.Features.Category.CategoriesController.Get(System.Int32)">
            <summary>
            Returns the category for the supplied id
            </summary>
            <response code="200">The category for the supplied id</response>
            <response code="400">The category is not found</response>
            <param name="id">Must be >= 0</param>
            <returns></returns>
        </member>
        <member name="M:Anabi.Features.Category.CategoriesController.Post(Anabi.Domain.Category.Commands.AddCategory)">
             <summary>
             Creates a new category
             </summary>
             <remarks>
             <para>
             Returns the id of the newly created category.
             Validation Errors:
            RuleFor(c.Code).NotEmpty().WithMessage("CODE_MANDATORY"); //Code is mandatory!
            RuleFor(c.Code).Length(1, 100).WithMessage("CODE_LENGTH_1_TO_100"); //The code must be between 1 and 100 characters!
            RuleFor(c.Code).MustAsync(HaveUniqueCode).WithMessage("CODE_EXISTS_ON_DIFFERENT_CATEGORY"); //The code exists on another category!
            RuleFor(c.Description).Length(0, 4000).WithMessage("DESCRIPTION_MAX_LENGTH_4000");//Description cannot be bigger than 4000 characters!
            RuleFor(c.ForEntity).NotEmpty().WithMessage("FORENTITY_MUST_BE_SPECIFIED"); //ForEntity was not specified
            RuleFor(c.ForEntity).Length(1, 40).WithMessage("FORENTITY_MAX_LENGTH_40"); //ForEntity must have a max value of 40 characters
             </para>
             </remarks>
             <response code="201">The id of the new category</response>
             <response code="400">In case of validation errors</response>
             <param name="newCategory">The details of the new category to be added</param>
             <returns></returns>
        </member>
        <member name="M:Anabi.Features.Category.CategoriesController.Put(Anabi.Domain.Category.Commands.EditCategory)">
             <summary>
             Edits an existing category
             </summary>
             <remarks>
             <para>
             RuleFor(c.Id).GreaterThan(0).WithMessage("ID_MUST_BE_SPECIFIED"); //"Id was not specified!"
            RuleFor(c.Code).NotEmpty().WithMessage("CODE_MANDATORY"); //"Code is mandatory"
            RuleFor(c.Code).Length(1, 100).WithMessage("CODE_LENGTH_1_TO_100"); //"The code must be between 1 and 100 characters!"
            RuleFor(c.Code).MustAsync((queryArgs, code, token) => HaveUniqueCode(queryArgs.Code, queryArgs.Id, token)).WithMessage("CODE_EXISTS_ON_DIFFERENT_CATEGORY");//"The code exists on another category!"
            RuleFor(c.Description).Length(0, 4000).WithMessage("DESCRIPTION_MAX_LENGTH_4000");//Description cannot be bigger than 4000 characters!
            RuleFor(c.ForEntity).NotEmpty().WithMessage("FORENTITY_MUST_BE_SPECIFIED"); //"ForEntity was not specified
            RuleFor(c.ForEntity).Length(1, 40).WithMessage("FORENTITY_MAX_LENGTH_40");//"ForEntity must have a max value of 40 characters
             </para>
             </remarks>
             <response code="200">No content</response>
             <response code="400">In case of validation errors</response>
             <param name="category"></param>
             <returns></returns>
        </member>
        <member name="M:Anabi.Features.Category.CategoriesController.Delete(Anabi.Domain.Category.Commands.DeleteCategory)">
            <summary>
            Deletes an existing category
            </summary>
            <remarks>
            <para>
            Checks if the category is not referenced in other tables.
            RuleFor(m.Id).GreaterThan(0).WithMessage("ID_MUST_BE_SPECIFIED");//Id was not specified!
            RuleFor(m).MustAsync(HaveNoChildren).WithMessage("CATEGORY_HAS_CHILDREN");//The category cannot be deleted because there are records that have a reference to it!
            </para>
            </remarks>
            <response code="200">No content</response>
            <response code="400">In case of validation errors (including references in other tables)</response>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="P:Anabi.Features.Category.Models.Category.ForEntity">
            <summary>
            Ex: Decision, Asset, Institution
            </summary>
        </member>
        <member name="M:Anabi.Features.CrimeTypes.CrimeTypesController.Get">
            <summary>
            Returns all crime types in the database
            </summary>
            <remarks>
            <para>
            Returns all crime types in the database
            </para>
            </remarks>
            <response code="200">Array of crime types</response>
        </member>
        <member name="M:Anabi.Features.Decisions.DecisionsController.Get">
            <summary>
            Returns all decision types in the database
            </summary>
            <remarks>
            <para>
            Returns all decision types in the database
            </para>
            </remarks>
            <response code="200">Array of decision types</response>
        </member>
        <member name="M:Anabi.Features.Defendant.DefendantController.AddDefendant(System.Int32,Anabi.Domain.Person.Commands.AddDefendantRequest)">
             <summary>
             Creates a new defendant
             </summary>
             <remarks>
             <para>
             Creates a new defendant by adding a new Person record and a new AssetDefendants record. 
             Checks that the AssetId provided exists in the database
             
             Validation errors:
             
            IDNUMBER_MAX_LENGTH_6;
            IDSERIE_MAX_LENGTH_2;
            IDENTIFICATION_MAX_LENGTH_20;
            PERSONNAME_MAX_LENGTH_200;
            FIRSTNAME_MAX_LENGTH_50;
            NATIONALITY_MAX_LENGTH_20;
            IDENTIFICATION_CANNOT_BE_EMPTY;
            PERSONNAME_CANNOT_BE_EMPTY;
            PERSONIDENTIFICATION_ALREADY_EXISTS;
            ASSET_INVALID_ID
             </para>
             </remarks>
             <response code="201">Id of the new defendant</response>
             <response code="400">Validation errors</response>
             <param name="assetId">Asset id where the defendant is added to</param>
             <param name="addPerson">Details for new defendant</param>
        </member>
        <member name="M:Anabi.Features.Defendant.DefendantController.GetDefendantsList(System.Int32)">
            <summary>
            Returns the list of defendants for a given asset id
            </summary>
            <response code="200">The list of defendants for a given asset id</response>
            <response code="400">Validation errors</response>
            <param name="assetId">Asset id</param>
        </member>
        <member name="M:Anabi.Features.Person.PersonController.GetIdentifiers(System.Boolean)">
            <summary>
            Returns identifiers in the database
            </summary>
            <remarks>
            <para>
            Returns identifiers in the database filtered for person type (person or company)
            </para>
            </remarks>
            <response code="200">Array of Identifiers</response>
            <response code="400">No identifiers found!</response>
            <param name="isForPerson"></param>
        </member>
        <member name="M:Anabi.Features.PrecautionaryMeasures.PrecautionaryMeasuresController.GetMeasures">
            <summary>
            Returns a list of precautionary measures (masuri asiguratorii)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Anabi.Features.RecoveryBeneficiaries.RecoveryBeneficiariesController.Get">
            <summary>
            Returns all recovery beneficiaries in the database
            </summary>
            <remarks>
            <para>
            Returns all recovery beneficiaries in the database
            </para>
            </remarks>
            <response code="200">Array of recovery beneficiaries</response>
        </member>
        <member name="M:Anabi.Features.StorageSpaces.StorageSpacesController.Get">
            <summary>
            Returns all storage spaces in the database
            </summary>
            <remarks>
            <para>
            Returns all storage spaces in the database
            Validation Errors: NO_STORAGE_SPACES_FOUND 
            </para>
            </remarks>
            <response code="200">Array of storage spaces</response>
            <response code="400">No storage spaces found!</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Anabi.Features.StorageSpaces.StorageSpacesController.Get(System.Int32)">
            <summary>
            Returns the storage space for the supplied id
            </summary>
            <remarks>
            <para>
            Validation Errors: 
            INVALID_ID = id lower than or equal to 0 
            NO_STORAGE_SPACES_FOUND
            </para>
            </remarks>
            <response code="200">Array of storage spaces</response>
            <response code="400">No storage spaces found!</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Anabi.Features.StorageSpaces.StorageSpacesController.Post(Anabi.Domain.StorageSpaces.Commands.AddStorageSpace)">
            <summary>
            Creates a new storage space
            </summary>
            <remarks>
            <para>
            Returns the id of the newly created storage space.
            Validation Errors:
            NAME_NOT_EMPTY
            NAME_MAX_LENGTH_200 
            CONTACTDATA_MAX_LENGTH_1000
            DESCRIPTION_MAX_LENGTH_2000
            </para>
            </remarks>
            <response code="201">The id of the new storage space</response>
            <response code="400">In case of validation errors</response>
            <response code="500">Server error</response>
            <param name="newStorageSpace">The details of the new storage space to be added</param>
            <returns>The id of the new storage space</returns>
        </member>
        <member name="M:Anabi.Features.StorageSpaces.StorageSpacesController.Put(Anabi.Domain.StorageSpaces.Commands.EditStorageSpace)">
            <summary>
            Returns the storage space for the supplied id
            </summary>
            <remarks>
            <para>
            Validation Errors: 
            INVALID_ID = id lower than or equal to 0 
            NO_STORAGE_SPACES_FOUND
            NAME_NOT_EMPTY
            NAME_MAX_LENGTH_200 
            CONTACTDATA_MAX_LENGTH_1000
            DESCRIPTION_MAX_LENGTH_2000
            </para>
            </remarks>
            <response code="200">The edited version of the storage space</response>
            <response code="400">No storage spaces found!</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Anabi.Features.StorageSpaces.StorageSpacesController.Delete(Anabi.Domain.StorageSpaces.Commands.DeleteStorageSpace)">
            <summary>
            Deletes the storage space for the supplied id after it checks that no entity is referencing the storage space you want to delete
            </summary>
            <remarks>
            <para>
            Validation Errors: 
            INVALID_ID = id lower than or equal to 0 
            ENTITY_IS_REFERENCED_BY_OTHER_ENTITIES = The entity is referenced in other tables and cannot be deleted
            </para>
            </remarks>
            <response code="204">The storage space has been deleted</response>
            <response code="400"></response>
            <response code="500">Server error</response>
        </member>
    </members>
</doc>
